# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

require 'yaml'
require 'fileutils'

$job="server"

$instance="tomcat-cluster" #redis 
$prex = "tomcat"

$job_modules = "/work/puppet/vagrant/#{$job}/modules"

$shared_folders= {
    "hiera"  => {"host"=> "./puppet/hiera","guest"=>"/tmp/vagrant-puppet/hiera", "type"=>"basic"},
    "facter" => {"host"=> "./puppet/facter","guest"=>"/tmp/vagrant-puppet/facter", "type"=>"basic"},
    "job"    => {"host"=> "/work/files/#{$job}","guest"=>"/job", "type"=>"basic", "options"=>['dmode=777,fmode=777']},
}

$modules = []
if File.directory?($job_modules )
  $modules.push($job_modules)
end   
$modules.push("/work/puppet/modules")

vagrant_dir = File.expand_path(File.dirname(__FILE__))
servers = YAML.load_file(File.join(File.dirname(__FILE__), "#{$instance}.yml"))

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  
  servers.each do |servers|
    if !servers["enable"].nil? && servers["enable"]===0    
       next
    end

    config.vm.define servers["name"] do |srv|
      srv.vm.box_check_update = false
      srv.vm.hostname = "#{$prex}#{servers['name']}.max.com"
      srv.vm.box = servers["box"]
      srv.vm.network "private_network", ip: servers["priv_ip"]
      srv.vm.provider "virtualbox" do |vb|
         vb.name = "#{$instance}-dev-#{servers['name']}"  
         vb.memory = servers["ram"]
         vb.cpus = servers["vcpu"]
      end    
    end
  end
  
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "max/ubuntu1404"
  #config.vm.hostname = "index.max.com"
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.56.37"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

    $shared_folders.each do |key, value|
	    if value['type'] == "nfs" 
	       mount_options =   value['options'].nil? ? ['nolock,vers=3,udp'] : value['options'] 
           config.vm.synced_folder value['host'], value['guest'], id: key, nfs: true, mount_options: mount_options
        elsif value['type'] == "basic"
           mount_options =  value['options'].nil? ? [] : value['options'] 
           config.vm.synced_folder value['host'], value['guest'], mount_options:mount_options
        end
  end
  
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #   config.vm.provider "virtualbox" do |vb|
  #    vb.name = "index-search"
  #   vb.gui = true
  #   vb.memory = "1024"
  #    vb.cpus = 2
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline <<-SHELL
  #   sudo apt-get install apache2
  # SHELL
   
   config.vm.provision :shell, path: "provision/base.sh"
   config.vm.provision :shell, path: "provision/remove_puppet_unless_modern.sh" 
   config.vm.provision :shell, path: "provision/install_puppet_on_ubuntu.sh"
     
   config.vm.provision :puppet do |puppet|
        puppet.manifests_path = "puppet/manifests"
        puppet.manifest_file  = "#{$instance}.pp"
        puppet.module_path = $modules
        puppet.hiera_config_path = "puppet/hiera/hiera.yaml"
        puppet.working_directory = "/tmp/vagrant-puppet/"
        puppet.options = "--parser future --verbose --debug "       
   end
end
